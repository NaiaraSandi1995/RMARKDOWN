install.packages("fancyhdr")
<!-- CONTRA-CAPA -->
knitr::kable(jogadas)
jogadas <- matrix(rep(0,16), ncol = 4)
dimnames(jogadas) <- list(c(0:3),c(0:3))
#Simulações
n_simul <- 100000
for(n in 1:n_simul){
ataque <- sort(sample(seq(1,6),3, replace=TRUE), decreasing = TRUE)
defesa <- sort(sample(seq(1,6),3, replace=TRUE), decreasing = TRUE)
ataque_vence <- sum(ataque > defesa)
#Quando há empate, o ataque é defendido, pois a defesa anula o ataque!
defesa_vence <- sum(defesa >= ataque)
jogadas[as.character(ataque), as.character(defesa)] <- jogadas[as.character(ataque),
as.character(defesa)] + 1
}
source("~/.active-rstudio-document", echo=TRUE)
jogadas[as.character(ataque), as.character(defesa)] <- jogadas[as.character(ataque),as.character(defesa)]
source("~/.active-rstudio-document", echo=TRUE)
View(jogadas)
jogadas <- matrix(rep(0,16), ncol = 4)
dimnames(jogadas) <- list(c(0:3),c(0:3))
#Simulações
n_simul <- 100000
for(n in 1:n_simul){
ataque <- sort(sample(seq(1,6),3, replace=TRUE), decreasing = TRUE)
defesa <- sort(sample(seq(1,6),3, replace=TRUE), decreasing = TRUE)
ataque_vence <- sum(ataque > defesa)
#Quando há empate, o ataque é defendido, pois a defesa anula o ataque!
defesa_vence <- sum(defesa >= ataque)
jogadas[as.character(ataque),as.character(defesa)] <- jogadas[as.character(ataque),as.character(defesa)] + 1
}
source("~/.active-rstudio-document", echo=TRUE)
jogadas[as.character(ataque),as.character(defesa)] <- jogadas[as.character(ataque),as.character(defesa)] + 1
jogadas[as.character(ataque),as.character(defesa)]}
for(n in 1:n_simul){
ataque <- sort(sample(seq(1,6),3, replace=TRUE), decreasing = TRUE)
defesa <- sort(sample(seq(1,6),3, replace=TRUE), decreasing = TRUE)
ataque_vence <- sum(ataque > defesa)
#Quando há empate, o ataque é defendido, pois a defesa anula o ataque!
defesa_vence <- sum(defesa >= ataque)
jogadas[as.character(ataque),as.character(defesa)]
}
