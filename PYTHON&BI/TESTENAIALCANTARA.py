# -*- coding: utf-8 -*-
"""TESTE.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-v8MjGzTkEVMcLqEy5dw_aA-isZwpzft

## Este teste ser√° divido em duas  partes. Ser√£o avaliadas no√ß√µes de neg√≥cios, no√ß√µes de SQL e no√ß√µes de constru√ß√£o de dashboards.

Na primeira parte voc√™ responder√° perguntas sobre no√ß√µes de neg√≥cio. Em seguida responder√° perguntas relacionadas ao desenvolvimento de consultas SQL. E por fim voc√™ dever√° construir um dashboard que responda as perguntas de neg√≥cio e traga novos insigths sobre os dados apresentados.

**Voc√™ pode entregar at√© onde conseguir fazer o teste, at√© mesmo propor outras solu√ß√µes que achar necess√°rio. N√£o fique preso apenas ao que √© solicitado!** üòÄ

## No√ß√µes de Neg√≥cios

Aqui vamos avaliar quest√µes do dia a dia, sobre como lidar com a equipe e o cliente.

1. Voc√™ √© designado para um cliente com o objetivo de desenvolver um dashboard para a equipe Comercial. Voc√™ nunca trabalhou com este cliente e n√£o tem contexto dos dados. Quais seriam seus passos para o desenvolvimento do trabalho?

Para come√ßar eu faria uma reuni√£o de kickoff com nosso setor comercial (que vendeu o projeto) para entender a ideia inicial.  

Depois faria a reuni√£o de briefing com o cliente, pois √© importante entender quais s√£o os objetivos que o conduziram a fazer pesquisa, o que ele espera entender, quais s√£o seu objetivos, dentre outros.    
Ap√≥s essa reuni√£o, eu estaria munida com as seguintes informa√ß√µes:

1-Teria uma ideia de como funciona a empresa (seu ramo de neg√≥cio, quem s√£o seus clientes e etc).   
2-Poderia baixar ou solicitar a paleta de cores da empresa, logos e maneiras de utiliza√ß√£o visual da marca
3-Objetivos da pesquisa, ent√£o conseguiria j√° criar os insights, a partir dos dados  

Diante disso eu daria o start no desenvolvimento do Dash. Primeiro organizaria os dados, depois pensaria em quais gr√°ficos e ideias s√£o mais interessantes para cada uma das p√°ginas do BI, e iria fazendo no "Dasktop" e testando na vers√£o "Servi√ßo".   

Quando estivesse pronto e revisado, mandaria o link para a revis√£o do meu superior, para cr√≠ticas, corre√ß√µes, altera√ß√µes, opini√µes, enfim o que fosse cab√≠vel. Feitas todas as etapas do desenvolmento desse trabalho, o produto estaria pronto para ser entregue atrav√©s de uma apresenta√ß√£o para o cliente.

2. Como voc√™ tra√ßaria um processo de valida√ß√£o de dados e consistencia das regras de neg√≥cio implementadas?

A valida√ß√£o dos dados seria feita atrav√©s da verifica√ß√£o das l√≥gicas do  question√°rios. Identificaria todas as quest√µes n√£o obrigat√≥rias com l√≥gicas. 

Por exemplo, "Qual o n√∫mero do seu sapato" essa pergunta somente poderia ser respondida por mulheres que cal√ßassem <=38, ent√£o inseriria exatamente essa regra na quest√£o. Se houvesse uma c√©lula respondida referente a um homem, ent√£o teria uma incosist√™nica e a resposta deveria ser exclu√≠da, pois homens n√£o deveriam ter respondido. Se quem respondeu fosse uma mulher que cal√ßa 40, ent√£o esse n√∫mero tamb√©mm deveria ser apagado. 

Esse √© um tipo de consist√™ncia que deveria ser feito na base de dados para valid√°-la. J√° em rela√ß√£o as regras de neg√≥cio a serem implementadas pela empresa, tendo validado os dados, os valores indicar√£o quais s√£o as melhores estrat√©gias a serem implementadas. 

Por exemplo, se fosse uma pesquisa sobre o consumo de maquiagem de uma empresa X, cujo universo fossem suas clientes e os dados demonstrassem que:
(1) A maioria das mulheres esta satisfeita com a qualidade dos protudos, (2)tem a pretens√£o de continuar comprando, isto √©, ir√° se manter fiel e (3) dizem que se houver a cria√ß√£o de uma nova linha, continuariam comprando ainda que seja um pouco mais cara, pois acreditam que os produtos ser√£o mais modernos. 
Veja, estamos falando sempre da maioria (mais do que 50% das/os entrevidas/os), sendo assim, √© claramente recomendado que a empresa mantenha sua produ√ß√£o habital, suas regras de neg√≥cio, mas tamb√©m pode lan√ßar essa nova linha mais custosa, pois haver√° boa receptividade por parte de suas clientes.

# TESTE PR√ÅTICO DE LINGUAGEM DE CONSULTA ESTRUTURADA (SQL)
Para a realiza√ß√£o das atividades, voc√™ dever√° executar as instru√ß√µes abaixo para importar as bibliotecas e fun√ß√µes necess√°rias para criar a base de dados.

Ao final, esperamos que voc√™ desenvolva os c√≥digos selecionados e entregue o notebook com as consultas SQL desenvolvidas e o arquivo .db criado.

O teste importar√° tr√™s arquivos cruciais para o desenvolvimento dessa atividade. Todos est√£o no Githun (n√£o mude as URL's).

*   usuarios.csv
*   produtos.csv
*   vendas.csv

## O teste foi desenvolvido para ser executado com o SQLite3 e no Google Colab (Ubuntu 18.04). Voc√™ dever√° utilizar consultas no padr√£o ANSI. Os comandos necess√°rios podem ser encontrados em:

https://www.sqlite.org/docs.html

https://www.tutorialspoint.com/sqlite/index.htm

# AVISO!



1.   Execute o c√≥digo abaixo para atualizar a biblioteca do SQLite3 utilizada para essa atividade
2.   **Ignore as mensagens de erro sobre perda de conectividade na instru√ß√£o abaixo (o kernel ser√° reiniciado para atualiza√ß√£o do SQLite3)**
"""

# Commented out IPython magic to ensure Python compatibility.
import os

# BAIXAR A √öLTIMA RELEASE DO COLAB, DESCOMPACTAR E INSTALAR NO DIRET√ìRIO DO 
# PYTHON 3.7 (VERS√ÉO USADA PELO COLAB NESSE NOTEBOOK)
!curl https://www.sqlite.org/src/tarball/sqlite.tar.gz?r=release | tar xz
# %cd sqlite/
!./configure
!make sqlite3.c
# %cd /content/sqlite/
!npx degit coleifer/pysqlite3 -f
!cp sqlite/sqlite3.[ch] .
!python setup.py build_static build
!cp build/lib.linux-x86_64-3.7/pysqlite3/_sqlite3.cpython-37m-x86_64-linux-gnu.so \
     /usr/lib/python3.7/lib-dynload/

# REINICIANDO O KERNEL DO COLAB PARA IMPORTAR A BIBLIOTECA ATUALIZADA
os.kill(os.getpid(), 9)

"""# INSTRU√á√ïES PARA REALIZAR AS CONSULTAS
### PARA CONSULTAR DADOS, SIGA OS PASSOS ABAIXO:

#### Abrir conex√£o:
    conexao_sql = sqlite3.connect(banco)
#### Abrir cursor para executar consulta no banco:
    cursor = conexao_sql.cursor()
#### Criar uma consulta:
    consulta = '''
        Coloque aqui a sua instru√ß√£o SQL;
    '''
    cursor.execute(consulta)
#### Para visualizar o resultado da sua consulta:
    for linha in cursor:
      print(linha)
#### Para fechar a conex√£o:
    conexao_sql.close()

### LEMBRE-SE DE QUE PYTHON √â SENS√çVEL A IDENTA√á√ÉO DE C√ìDIGO!

# IMPORTANDO BIBLIOTECAS NECESS√ÅRIAS PARA EXECUTAR OS C√ìDIGOS EM SQL
"""

import sqlite3
import csv
import requests
from pathlib import Path
from urllib.parse import urlparse

"""# DEFINI√á√ÉO DE VARI√ÅVEIS FIXAS PARA O PROJETO"""

banco = "teste_sql.db"

"""# FUN√á√ÉO PARA INSERIR REGISTROS NO BANCO DE DADOS"""

# Recebe como par√¢metro
# 1. Nome do banco de dados
# 2. Nome da tabela que receber√° os dados
# 3. Lista das colunas da tabela
# 4. Dados que ser√£o inseridos

def inserir_registros(banco, tabela, lista_colunas, arquivo):
  conexao_sql = sqlite3.connect(banco)
  cursor = conexao_sql.cursor()
  dados = open(arquivo)
  conteudo_dados = csv.reader(dados)
  num_colunas = 1 if lista_colunas.count(',') == 1 else lista_colunas.count(',')
  string_insert = 'INSERT INTO ' + tabela + ' (' + lista_colunas + ') VALUES (?' + ('' if num_colunas == 1 else ', ?' * (num_colunas)) + ')'
  cursor.executemany(string_insert, conteudo_dados)
  conexao_sql.commit()
  conexao_sql.close()

"""# FUN√á√ÉO PARA BAIXAR A BASE DE DADOS UTILIZADA PARA DESENVOLVIMENTO DAS ATIVIDADES"""

# Recebe como par√¢metro:
# 1. Nome do arquivo com a extens√£o (Ex: base.csv)
# 2. URL do site onde o dado est√° localizado (Ex: 'https://drive.google.com/user_teste/folder_dataset/file.csv'):

def baixar_dados(nome_arquivo, url):
  requisicao = requests.get(url)
  conteudo = requisicao.content
  arquivo_csv = open(nome_arquivo, 'wb')
  arquivo_csv.write(conteudo)
  arquivo_csv.close()

"""# CRIA√á√ÉO DE CONEX√ÉO COM O BANCO SQLITE3 PARA DESENVOLVIMENTO DA ATIVIDADE"""

# Abre conex√£o com o banco. Se o arquivo n√£o existir, cria a base.
conexao_sql = sqlite3.connect(banco)
conexao_sql.close()

"""# CRIA√á√ÉO DAS TABELAS PARA REALIZA√á√ÉO DAS ATIVIDADES

### TABELA DE USU√ÅRIOS
"""

url = 'https://raw.githubusercontent.com/A3Data/testes_praticos/main/sql/base_dados/usuarios.csv'
nome_arquivo = Path(urlparse(url).path).name
baixar_dados(nome_arquivo, url)

conexao_sql = sqlite3.connect(banco)
# CRIAR A TABELA
conexao_sql.execute('''
CREATE TABLE IF NOT EXISTS usuarios
(
  cod_usuario INTEGER NOT NULL,
  data_cadastro DATE NOT NULL,
  faixa_etaria TEXT,
  cidade TEXT NOT NULL,
  estado TEXT NOT NULL);'''
)
conexao_sql.commit()

# INSERIR OS REGISTROS NO BANCO DE DADOS
lista_campos = 'cod_usuario, data_cadastro, faixa_etaria, cidade, estado'
inserir_registros(banco, 'usuarios', lista_campos, nome_arquivo)

"""### TABELA DE PRODUTOS"""

url = 'https://raw.githubusercontent.com/A3Data/testes_praticos/main/sql/base_dados/produtos.csv'
nome_arquivo = Path(urlparse(url).path).name
baixar_dados(nome_arquivo, url)

conexao_sql = sqlite3.connect(banco)
arquivo_produtos = 'produtos.csv'
# CRIAR A TABELA
conexao_sql.execute('''
CREATE TABLE IF NOT EXISTS produtos
(
  cod_produto INTEGER NOT NULL,
  nome_produto TEXT NOT NULL,
  categoria_produto TEXT,
  valor_produto FLOAT);'''
)
conexao_sql.commit()

# INSERIR OS REGISTROS NO BANCO DE DADOS
lista_campos = 'cod_produto, nome_produto, categoria_produto, valor_produto'
inserir_registros(banco, 'produtos', lista_campos, arquivo_produtos)

"""### TABELA DE VENDAS"""

url = 'https://raw.githubusercontent.com/A3Data/testes_praticos/main/sql/base_dados/vendas.csv'
nome_arquivo = Path(urlparse(url).path).name
baixar_dados(nome_arquivo, url)

conexao_sql = sqlite3.connect(banco)
arquivo_vendas = 'vendas.csv'
# CRIAR A TABELA
conexao_sql.execute('''
CREATE TABLE IF NOT EXISTS vendas
(
  cod_usuario INTEGER NOT NULL,
  cod_produto INTEGER NOT NULL,
  data_compra DATE NOT NULL,
  quantidade INT NOT NULL,
  valor FLOAT NOT NULL);'''
)
conexao_sql.commit()

# INSERIR OS REGISTROS NO BANCO DE DADOS
lista_campos = 'cod_usuario, cod_produto, data_compra, quantidade, valor'
inserir_registros(banco, 'vendas', lista_campos, arquivo_vendas)

"""## Pergunta 1:


 Escreva um comando em SQL que retorne a quantidade de venda do estado de Minas Gerais por ano e m√™s
"""

from sqlite3.dbapi2 import SQLITE_SELECT

cursor = conexao_sql.cursor()

consulta = '''
SELECT strftime('%Y-%m',data_compra) as data,
  sum(quantidade) 
  FROM vendas 
    WHERE cod_usuario IN (SELECT cod_usuario FROM usuarios WHERE estado like "Minas Gerais")
GROUP BY data
'''

cursor.execute(consulta)
for linha in cursor:
  print(linha)

"""## Pergunta 2:

Escreva um comando em SQL que retorne quais s√£o os 3 produtos mais comprados por estado, a quantidade de itens comprados, o valor total pago e a m√©dia de pre√ßo paga
"""

from sqlite3.dbapi2 import SQLITE_SELECT

cursor = conexao_sql.cursor()

consulta = '''
SELECT produtos.nome_produto, sum(vendas.quantidade), sum(vendas.valor), avg(vendas.valor), usuarios.estado
FROM vendas, produtos, usuarios
WHERE vendas.cod_usuario = usuarios.cod_usuario 
GROUP BY usuarios.estado
'''
cursor.execute(consulta)
for linha in cursor:
  print(linha)

"""## Pergunta 3

Escreva um comando em SQL que retorne o produto, a quantidade de itens vendidos e a receita do produto que tem mais itens vendidos por ano e m√™s
"""

from sqlite3.dbapi2 import SQLITE_SELECT

cursor = conexao_sql.cursor()

consulta = '''
SELECT produtos.nome_produto, vendas.quantidade, vendas.quantidade * valor_produto, 
strftime('%Y',vendas.data_compra) as data1, strftime('%m',vendas.data_compra) as data2
  FROM vendas, produtos
  WHERE vendas.cod_produto = produtos.cod_produto
  GROUP BY data1, data2
  HAVING vendas.quantidade = max(vendas.quantidade)



'''
cursor.execute(consulta) 
for linha in cursor:
  print(linha)

"""# **Constru√ß√£o de dashboard** 


**Seu desafio √© desenvolver uma an√°lise dos dados de vendas disponibilizados pela Data Coporation, com o intuito de gerar insights para os gestores respons√°veis.**

O dashboard dever√° conter apenas uma p√°gina e ser desenvolvido em Power BI.

Segue algumas perguntas feitas pelos gestores que devem ser abordadas:

1. O gerente geral da Data Corporation decidiu abrir opera√ß√£o de lojas fisicas em quatro cidades. Quais cidades voc√™ indicaria baseado no hist√≥rico de compras?

2. Para abrir a opera√ß√£o de lojas fisicas o gerante tamb√©m precisa decidir qual categoria ele deve investir, pensando em retorno financeiro. Al√©m disso ele gostaria de indica√ß√µes de produtos que possam alanvancar as vendas nos primeiros 6 meses. A proposta √© que a abertura aconte√ßa nos meses de janeiro e fevereiro. Qual seria sua indica√ß√£o?


**N√£o fique preso nas perguntas acima, novos insights s√£o sempre bem vindos!**


LINK PARA ACESSAR O POWER BI DA NAIARA: https://app.powerbi.com/view?r=eyJrIjoiNDc1ZjlkMGYtZWM3OC00MzQ4LTk1MmQtMzAxMDFkNDMwMDNlIiwidCI6IjM3MWYxZjdjLTA4OTQtNDFkMi04M2M5LTNlZWNkZmU2ODc1OCJ9&pageName=ReportSection


<iframe title="PowerBi NaiAlcantara" width="600" height="373.5" src="https://app.powerbi.com/view?r=eyJrIjoiNDc1ZjlkMGYtZWM3OC00MzQ4LTk1MmQtMzAxMDFkNDMwMDNlIiwidCI6IjM3MWYxZjdjLTA4OTQtNDFkMi04M2M5LTNlZWNkZmU2ODc1OCJ9&pageName=ReportSection" frameborder="0" allowFullScreen="true"></iframe>


"""